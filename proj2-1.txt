1. The problem with this idea is that the number of ways of arranging 4 pieces is (4*3*2) = 24.  The total amount of permutations generated by our project is 12.  This is a 2:1 ratio, meaning that one desired outcome has (ways/2) options associated with it.  This would mean a huge and largely redundant solution.

2. A better way would be to use dfs instead of bfs.  Finding the solution this way would result in 

3. Instead of storing the number of moves away from the solution (1 peg remaining) at the current point, store the exact moves required to reach the solution.  This would require extra memory.  If n is the largest number of moves possible, and o is the total number of board configurations, this could be as much extra memory as nm.